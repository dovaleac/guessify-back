/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.generated.tables.records;


import com.dovaleac.guessing.game.jooq.generated.tables.Answer;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnswerRecord extends UpdatableRecordImpl<AnswerRecord> implements Record7<Integer, Integer, Integer, String, String, Integer, OffsetDateTime> {

    private static final long serialVersionUID = 549042371;

    /**
     * Setter for <code>games.answer.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>games.answer.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>games.answer.question_in_game_id</code>.
     */
    public void setQuestionInGameId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>games.answer.question_in_game_id</code>.
     */
    public Integer getQuestionInGameId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>games.answer.player_id</code>.
     */
    public void setPlayerId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>games.answer.player_id</code>.
     */
    public Integer getPlayerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>games.answer.answer</code>.
     */
    public void setAnswer(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>games.answer.answer</code>.
     */
    public String getAnswer() {
        return (String) get(3);
    }

    /**
     * Setter for <code>games.answer.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>games.answer.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>games.answer.round</code>.
     */
    public void setRound(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>games.answer.round</code>.
     */
    public Integer getRound() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>games.answer.moment</code>.
     */
    public void setMoment(OffsetDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>games.answer.moment</code>.
     */
    public OffsetDateTime getMoment() {
        return (OffsetDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, String, String, Integer, OffsetDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row7<Integer, Integer, Integer, String, String, Integer, OffsetDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Answer.ANSWER.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Answer.ANSWER.QUESTION_IN_GAME_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Answer.ANSWER.PLAYER_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Answer.ANSWER.ANSWER_;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Answer.ANSWER.STATUS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Answer.ANSWER.ROUND;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<OffsetDateTime> field7() {
        return Answer.ANSWER.MOMENT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getQuestionInGameId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component6() {
        return getRound();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime component7() {
        return getMoment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getQuestionInGameId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getPlayerId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getAnswer();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getStatus();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getRound();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OffsetDateTime value7() {
        return getMoment();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value2(Integer value) {
        setQuestionInGameId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value3(Integer value) {
        setPlayerId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value4(String value) {
        setAnswer(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value5(String value) {
        setStatus(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value6(Integer value) {
        setRound(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord value7(OffsetDateTime value) {
        setMoment(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AnswerRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, Integer value6, OffsetDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AnswerRecord
     */
    public AnswerRecord() {
        super(Answer.ANSWER);
    }

    /**
     * Create a detached, initialised AnswerRecord
     */
    public AnswerRecord(Integer id, Integer questionInGameId, Integer playerId, String answer, String status, Integer round, OffsetDateTime moment) {
        super(Answer.ANSWER);

        set(0, id);
        set(1, questionInGameId);
        set(2, playerId);
        set(3, answer);
        set(4, status);
        set(5, round);
        set(6, moment);
    }
}
