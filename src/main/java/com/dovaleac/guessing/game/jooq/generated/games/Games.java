/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.generated.games;


import com.dovaleac.guessing.game.jooq.generated.DefaultCatalog;
import com.dovaleac.guessing.game.jooq.generated.games.tables.Answer;
import com.dovaleac.guessing.game.jooq.generated.games.tables.ClueRequest;
import com.dovaleac.guessing.game.jooq.generated.games.tables.Game;
import com.dovaleac.guessing.game.jooq.generated.games.tables.GameConfig;
import com.dovaleac.guessing.game.jooq.generated.games.tables.Player;
import com.dovaleac.guessing.game.jooq.generated.games.tables.PlayerInScoreboard;
import com.dovaleac.guessing.game.jooq.generated.games.tables.QuestionInGame;
import com.dovaleac.guessing.game.jooq.generated.games.tables.Room;
import com.dovaleac.guessing.game.jooq.generated.games.tables.Scoring;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Games extends SchemaImpl {

    private static final long serialVersionUID = -293701751;

    /**
     * The reference instance of <code>games</code>
     */
    public static final Games GAMES = new Games();

    /**
     * The table <code>games.answer</code>.
     */
    public final Answer ANSWER = com.dovaleac.guessing.game.jooq.generated.games.tables.Answer.ANSWER;

    /**
     * The table <code>games.clue_request</code>.
     */
    public final ClueRequest CLUE_REQUEST = com.dovaleac.guessing.game.jooq.generated.games.tables.ClueRequest.CLUE_REQUEST;

    /**
     * The table <code>games.game</code>.
     */
    public final Game GAME = com.dovaleac.guessing.game.jooq.generated.games.tables.Game.GAME;

    /**
     * The table <code>games.game_config</code>.
     */
    public final GameConfig GAME_CONFIG = com.dovaleac.guessing.game.jooq.generated.games.tables.GameConfig.GAME_CONFIG;

    /**
     * The table <code>games.player</code>.
     */
    public final Player PLAYER = com.dovaleac.guessing.game.jooq.generated.games.tables.Player.PLAYER;

    /**
     * The table <code>games.player_in_scoreboard</code>.
     */
    public final PlayerInScoreboard PLAYER_IN_SCOREBOARD = com.dovaleac.guessing.game.jooq.generated.games.tables.PlayerInScoreboard.PLAYER_IN_SCOREBOARD;

    /**
     * The table <code>games.question_in_game</code>.
     */
    public final QuestionInGame QUESTION_IN_GAME = com.dovaleac.guessing.game.jooq.generated.games.tables.QuestionInGame.QUESTION_IN_GAME;

    /**
     * The table <code>games.room</code>.
     */
    public final Room ROOM = com.dovaleac.guessing.game.jooq.generated.games.tables.Room.ROOM;

    /**
     * The table <code>games.scoring</code>.
     */
    public final Scoring SCORING = com.dovaleac.guessing.game.jooq.generated.games.tables.Scoring.SCORING;

    /**
     * No further instances allowed
     */
    private Games() {
        super("games", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.ANSWER_ID_SEQ,
            Sequences.CLUE_REQUEST_ID_SEQ,
            Sequences.GAME_CONFIG_ID_SEQ,
            Sequences.GAME_ID_SEQ,
            Sequences.PLAYER_ID_SEQ,
            Sequences.PLAYER_IN_SCOREBOARD_ID_SEQ,
            Sequences.QUESTION_IN_GAME_ID_SEQ,
            Sequences.ROOM_ID_SEQ,
            Sequences.SCORING_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Answer.ANSWER,
            ClueRequest.CLUE_REQUEST,
            Game.GAME,
            GameConfig.GAME_CONFIG,
            Player.PLAYER,
            PlayerInScoreboard.PLAYER_IN_SCOREBOARD,
            QuestionInGame.QUESTION_IN_GAME,
            Room.ROOM,
            Scoring.SCORING);
    }
}
