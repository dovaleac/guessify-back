/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.generated.games.tables.records;


import com.dovaleac.guessing.game.jooq.generated.games.tables.Scoring;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ScoringRecord extends UpdatableRecordImpl<ScoringRecord> implements Record3<Integer, String, Integer> {

    private static final long serialVersionUID = -1402211886;

    /**
     * Setter for <code>games.scoring.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>games.scoring.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>games.scoring.scorings</code>.
     */
    public void setScorings(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>games.scoring.scorings</code>.
     */
    public String getScorings() {
        return (String) get(1);
    }

    /**
     * Setter for <code>games.scoring.malus_if_missed</code>.
     */
    public void setMalusIfMissed(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>games.scoring.malus_if_missed</code>.
     */
    public Integer getMalusIfMissed() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Scoring.SCORING.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Scoring.SCORING.SCORINGS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Scoring.SCORING.MALUS_IF_MISSED;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getScorings();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getMalusIfMissed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getScorings();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getMalusIfMissed();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoringRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoringRecord value2(String value) {
        setScorings(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoringRecord value3(Integer value) {
        setMalusIfMissed(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ScoringRecord values(Integer value1, String value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ScoringRecord
     */
    public ScoringRecord() {
        super(Scoring.SCORING);
    }

    /**
     * Create a detached, initialised ScoringRecord
     */
    public ScoringRecord(Integer id, String scorings, Integer malusIfMissed) {
        super(Scoring.SCORING);

        set(0, id);
        set(1, scorings);
        set(2, malusIfMissed);
    }
}
