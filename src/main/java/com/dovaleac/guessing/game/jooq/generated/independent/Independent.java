/*
 * This file is generated by jOOQ.
 */
package com.dovaleac.guessing.game.jooq.generated.independent;


import com.dovaleac.guessing.game.jooq.generated.DefaultCatalog;
import com.dovaleac.guessing.game.jooq.generated.independent.tables.Lang;
import com.dovaleac.guessing.game.jooq.generated.independent.tables.Question;
import com.dovaleac.guessing.game.jooq.generated.independent.tables.QuestionSet;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Independent extends SchemaImpl {

    private static final long serialVersionUID = -2093728103;

    /**
     * The reference instance of <code>independent</code>
     */
    public static final Independent INDEPENDENT = new Independent();

    /**
     * The table <code>independent.lang</code>.
     */
    public final Lang LANG = com.dovaleac.guessing.game.jooq.generated.independent.tables.Lang.LANG;

    /**
     * The table <code>independent.question</code>.
     */
    public final Question QUESTION = com.dovaleac.guessing.game.jooq.generated.independent.tables.Question.QUESTION;

    /**
     * The table <code>independent.question_set</code>.
     */
    public final QuestionSet QUESTION_SET = com.dovaleac.guessing.game.jooq.generated.independent.tables.QuestionSet.QUESTION_SET;

    /**
     * No further instances allowed
     */
    private Independent() {
        super("independent", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.LANG_ID_SEQ,
            Sequences.QUESTION_ID_SEQ,
            Sequences.QUESTION_SET_ID_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Lang.LANG,
            Question.QUESTION,
            QuestionSet.QUESTION_SET);
    }
}
